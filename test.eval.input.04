(quote ())

(define x 5)
x

(modulo x 3.0)

(= x 5.0)

(if #f 3)

(modulo 3 5)

(define zero?
	(lambda (x)
		(= x 0)))

(define append
  (lambda (l1 l2)
    (if (null? l1)
        l2
        (cons (car l1) (append (cdr l1) l2)))))

(define list
  (lambda args
    args))

(define range
  (lambda (n)
    (if (zero? n)
        (quote ())
        (append (range (- n 1)) (list n)))))

(range 15)
